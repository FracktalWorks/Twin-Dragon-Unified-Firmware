########################################
# Single Nozzle Configuration
# Adapted from IDEX configuration
########################################

[respond]
default_type: echo

########################################
# Misc.
########################################

[delayed_gcode STARTUP]
initial_duration: 1
gcode:
    SET_LED LED=toolhead0 GREEN=1.0

[gcode_macro PARK_TOOL]
gcode:
    G90
    G1 X0 Y0 F6000  ; Move to park position
    G91
    G1 Z10 F900     ; Raise Z for safety
    G90

[gcode_macro PURGE_POSITION]
gcode:
    G90
    G1 X10 Y10 F6000  ; Move to purge position
    RESPOND TYPE=echo MSG="Purge Position Reached"

########################################
# Tool Activation
########################################

[gcode_macro T0]
description: Activate T0
gcode:
    M400
    G90
    G1 Z10 F900  ; Raise Z for safety
    G1 X0 Y0 F6000  ; Move to home position
    SET_LED LED=toolhead0 GREEN=1.0
    RESPOND TYPE=echo MSG="Active Extruder: 0"

########################################
# Temperature & Fans
########################################

[gcode_macro M106]
description: Set fan speed
gcode:
    {% set raw_speed = params.S|default(0)|float %}
    {% set fan_speed = (raw_speed / 255.0)|round(2) %}
    SET_FAN_SPEED FAN=extruder_CF SPEED={fan_speed}

[gcode_macro M107]
description: Turn off fan
gcode:
    M106 S0

[gcode_macro M104]
rename_existing: M104.1
description: Set hotend temperature
gcode:
    {% set temp = params.S|default(0)|float %}
    M104.1 S{temp}

[gcode_macro M109]
rename_existing: M109.1
description: Wait for hotend temperature
gcode:
    {% set temp = params.S|default(0)|float %}
    M109.1 S{temp}

########################################
# Bed Mesh Calibration
########################################

[gcode_macro G29]
gcode:
    BED_MESH_CLEAR
    BED_MESH_CALIBRATE
    BED_MESH_PROFILE SAVE=p1
    SAVE_CONFIG NO_RESTART=1
    M420 S1

########################################
# Homing Sequence
########################################

[homing_override]
gcode:
    {% if not printer.dual_carriage is defined %}
        # only run for single nozzle printers
        ACTIVATE_EXTRUDER EXTRUDER=extruder
        SET_GCODE_OFFSET X=0 Y=0 Z=0
    {% endif %}

    BED_MESH_CLEAR

    {% if params.X and not params.Y and not params.Z %}
        G28 X0
    {% endif %}
    {% if not params.X and params.Y and not params.Z %}
        G28 Y0
    {% endif %}
    {% if not params.X and not params.Y and params.Z %}
        G28 Z0
        G91
        G0 Z-4
        G90
    {% endif %}    
    {% if params.Y and params.X and not params.Z %}
        G28 Y0
        G28 X
    {% endif %}
    {% if not params.X and not params.Y and not params.Z %}
        G28 Z0
        G28 Y0
        G28 X0
        G91
        G0 Z-4
        G90
    {% endif %}
    {% if params.X and params.Y and params.Z %}
        G28 Z0
        G28 Y0
        G28 X0
        G91
        G0 Z-4
        G90
    {% endif %}

########################################
# Pause & Resume Functionality
########################################
[pause_resume]

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE

gcode:
    {% set idex_var = printer["gcode_macro IDEX_VARIABLES"] %}
    {% set z = params.Z|default(2.5)|int %}                                                                         ;Zhop on Pause
    {% set r = params.R|default(2)|int %}                                                                           ;Retract on Pause
    {% if printer['pause_resume'].is_paused|int == 0 %}                                                             ;if PAUSE was already called, skip
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=etemp VALUE={printer['extruder'].target}                           ; set hotend temp variable for reference in resume macro
        {% if printer.extruder1 is defined %}
            SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=etemp1 VALUE={printer['extruder1'].target}                    ; set hotend temp variable for reference in resume macro
        {% endif %}
        SET_FILAMENT_SENSOR SENSOR=switch_sensor_T0 ENABLE=0                                                        ;Dissable all filament sensor
        SET_FILAMENT_SENSOR SENSOR=encoder_sensor_T0 ENABLE=0
        {% if printer.extruder1 is defined %}
            SET_FILAMENT_SENSOR SENSOR=switch_sensor_T1 ENABLE=0
            SET_FILAMENT_SENSOR SENSOR=encoder_sensor_T1 ENABLE=0
        {% endif %}
        SAVE_VARIABLE VARIABLE=fs_status VALUE=0

        {% if printer.dual_carriage is defined %}
            {% if printer.dual_carriage.carriage_1 == "COPY" or printer.dual_carriage.carriage_1 == "MIRROR" %}
                SAVE_DUAL_CARRIAGE_STATE NAME=IDEX_PAUSE_STATE
            {% else %}
                SAVE_GCODE_STATE NAME=PAUSE
            {% endif %}
            
            BASE_PAUSE
            G91
            G1 E-{r} F600
            G90
            {% if (printer.gcode_move.position.z + z) < printer.toolhead.axis_maximum.z %}
                G91
                G1 Z{z} F900
                G90
                SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE={z}
            {% else %}
                { action_respond_info("Pause zhop exceeds maximum Z height.") }
                SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE=0
            {% endif %}
            {% if printer.dual_carriage.carriage_0 == "PRIMARY" and printer.dual_carriage.carriage_1 == "INACTIVE" %}
                SAVE_VARIABLE VARIABLE=idex_status VALUE=0
                G90
                G1 X{idex_var.tool0_pause_position_x} Y{idex_var.tool0_pause_position_y} F9000
                RESPOND TYPE=echo MSG="T0 PAUSE POSITION"
            {% elif printer.dual_carriage.carriage_0 == "INACTIVE" and printer.dual_carriage.carriage_1 == "PRIMARY" %}
                SAVE_VARIABLE VARIABLE=idex_status VALUE=1
                G90
                G1 X{idex_var.tool1_pause_position_x} Y{idex_var.tool1_pause_position_y} F9000
                RESPOND TYPE=echo MSG="T1 PAUSE POSITION"
            {% elif printer.dual_carriage.carriage_0 == "PRIMARY" and printer.dual_carriage.carriage_1 == "COPY" %}
                SAVE_VARIABLE VARIABLE=idex_status VALUE=2
                G90
                G1 X{idex_var.tool0_pause_position_x} Y{idex_var.tool0_pause_position_y} F9000
                M605 S1
                RESPOND TYPE=echo MSG="COPY MODE PAUSE POSITION"
            {% elif printer.dual_carriage.carriage_0 == "PRIMARY" and printer.dual_carriage.carriage_1 == "MIRROR" %}
                SAVE_VARIABLE VARIABLE=idex_status VALUE=3
                G90
                G1 X{idex_var.tool0_pause_position_x} Y{idex_var.tool0_pause_position_y} F9000
                M605 S1
                RESPOND TYPE=echo MSG="MIRROR MODE PAUSE POSITION"
            {% endif %}
        {% else %}
            SAVE_GCODE_STATE NAME=PAUSE
            BASE_PAUSE
            G91
            G1 E-{r} F600
            G90
            {% if (printer.gcode_move.position.z + z) < printer.toolhead.axis_maximum.z %}
                G91
                G1 Z{z} F900
                G90
                SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE={z}
            {% else %}
                { action_respond_info("Pause zhop exceeds maximum Z height.") }
                SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE=0
            {% endif %}
            G90
            G1 X{idex_var.tool0_pause_position_x|default(0)} Y{idex_var.tool0_pause_position_y|default(0)} F9000
            RESPOND TYPE=echo MSG="PAUSE POSITION"
        {% endif %}
    {% endif %}

[gcode_macro CLEAN_NOZZLE]
gcode:
  {% set idex_var = printer["gcode_macro IDEX_VARIABLES"] if printer["gcode_macro IDEX_VARIABLES"] is defined else namespace(tool0_pause_position_x=0, tool0_pause_position_y=0, tool1_pause_position_x=0, tool1_pause_position_y=0) %}
  {% if printer.dual_carriage is defined %}
      {% if printer.dual_carriage.carriage_0 == "PRIMARY" and printer.dual_carriage.carriage_1 == "INACTIVE" %}
            G90
            G1 X{idex_var.tool0_pause_position_x|default(0)} Y{idex_var.tool0_pause_position_y|default(0)} F7000
            G1 X{(idex_var.tool0_pause_position_x|default(0)) + 40} F7000
            G1 X{idex_var.tool0_pause_position_x|default(0)}
            G1 X{(idex_var.tool0_pause_position_x|default(0)) + 40}
            G1 X{idex_var.tool0_pause_position_x|default(0)}
      {% elif printer.dual_carriage.carriage_0 == "INACTIVE" and printer.dual_carriage.carriage_1 == "PRIMARY" %}
            G90
            G1 X{idex_var.tool1_pause_position_x|default(0)} Y{idex_var.tool1_pause_position_y|default(0)} F7000
            G1 X{(idex_var.tool1_pause_position_x|default(0)) - 40} F7000
            G1 X{idex_var.tool1_pause_position_x|default(0)}
            G1 X{(idex_var.tool1_pause_position_x|default(0)) - 40}
            G1 X{idex_var.tool1_pause_position_x|default(0)}
      {% else %}
            G90
            G1 X{idex_var.tool0_pause_position_x|default(0)} Y{idex_var.tool0_pause_position_y|default(0)} F7000
            G1 X{(idex_var.tool0_pause_position_x|default(0)) + 40} F7000
            G1 X{idex_var.tool0_pause_position_x|default(0)}
            G1 X{(idex_var.tool0_pause_position_x|default(0)) + 40}
            G1 X{idex_var.tool0_pause_position_x|default(0)}
      {% endif %}
  {% else %}
      G90
      G1 X{0} Y{0} F7000
      G1 X{40} F7000
      G1 X{0}
      G1 X{40}
      G1 X{0}
  {% endif %}

[gcode_macro RESUME]
rename_existing: BASE_RESUME
variable_zhop: 0
variable_etemp: 0
variable_etemp1: 0
variable_activetool: 0
gcode:
    {% set idex_var = printer["gcode_macro IDEX_VARIABLES"] %}
    {% set e = params.E|default(20)|int %}                                                ; hotend prime amount (in mm)
    {% set r = params.R|default(1)|int %}                                                ; hotend prime amount (in mm)
    {% if printer['pause_resume'].is_paused|int == 1 %}
        {% if printer.save_variables.variables.primary_fs_status == 1 %}
            SET_FILAMENT_SENSOR SENSOR=switch_sensor_T0 ENABLE=1
            SET_FILAMENT_SENSOR SENSOR=encoder_sensor_T0 ENABLE=1
            {% if printer.extruder1 is defined %}
                SET_FILAMENT_SENSOR SENSOR=switch_sensor_T1 ENABLE=1
                SET_FILAMENT_SENSOR SENSOR=encoder_sensor_T1 ENABLE=1
            {% endif %}
            SAVE_VARIABLE VARIABLE=fs_status VALUE=1
        {% elif printer.save_variables.variables.primary_fs_status == 0 %}
            SET_FILAMENT_SENSOR SENSOR=switch_sensor_T0 ENABLE=0
            SET_FILAMENT_SENSOR SENSOR=encoder_sensor_T0 ENABLE=0
            {% if printer.extruder1 is defined %}
                SET_FILAMENT_SENSOR SENSOR=switch_sensor_T1 ENABLE=0
                SET_FILAMENT_SENSOR SENSOR=encoder_sensor_T1 ENABLE=0
            {% endif %}
            SAVE_VARIABLE VARIABLE=fs_status VALUE=0
        {% endif %}
        {% if etemp > 0 %}
            M104 T0 S{etemp|int}
        {% endif %}
        {% if etemp1 > 0 and printer.extruder1 is defined %}
            M104 T1 S{etemp1|int}
        {% endif %}
        {% if etemp > 0 %}
            {action_respond_info("Heating extruder 0 ..")}
            M109 S{etemp|int}
        {% endif %}
        {% if etemp1 > 0 and printer.extruder1 is defined %}
            {action_respond_info("Heating extruder 1 ..")}
            M109 T1 S{etemp1|int}
        {% endif %}
        {% if printer.dual_carriage is defined %}
            {% if printer.save_variables.variables.idex_status == 0 %}
                M605 S1
                T0
                G1 X{idex_var.tool0_pause_position_x} Y{idex_var.tool0_pause_position_y} F7000
                {% if printer[printer.toolhead.extruder].temperature >= printer.configfile.settings.extruder.min_extrude_temp %}
                    G91
                    G1 E{e} F400
                    G1 E-{r} F600
                    G90
                {% endif %}
                CLEAN_NOZZLE
                M420 S1
                RESTORE_GCODE_STATE NAME=PAUSE MOVE=1 MOVE_SPEED=150
                G91
                G1 E{r} F600
                G90
                BASE_RESUME VELOCITY=150
            {% elif printer.save_variables.variables.idex_status == 1 %}
                M605 S1
                T1
                G1 X{idex_var.tool1_pause_position_x} Y{idex_var.tool1_pause_position_y} F7000
                {% if printer[printer.toolhead.extruder].temperature >= printer.configfile.settings.extruder.min_extrude_temp %}
                    G91
                    G1 E{e} F400
                    G1 E-{r} F600
                    G90
                {% endif %}
                CLEAN_NOZZLE
                M420 S1
                RESTORE_GCODE_STATE NAME=PAUSE MOVE=1 MOVE_SPEED=150
                G91
                G1 E{r} F600
                G90
                BASE_RESUME VELOCITY=150
            {% elif printer.save_variables.variables.idex_status == 2 or printer.save_variables.variables.idex_status == 3  %}
                M605 S3
                G1 X{idex_var.tool0_pause_position_x} Y{idex_var.tool0_pause_position_y} F7000
                {% if printer[printer.toolhead.extruder].temperature >= printer.configfile.settings.extruder.min_extrude_temp %}
                    G91
                    G1 E{e} F400
                    G1 E-{r} F600
                    G90
                {% endif %}
                CLEAN_NOZZLE
                M420 S1
                RESTORE_DUAL_CARRIAGE_STATE NAME=IDEX_PAUSE_STATE MOVE=1 MOVE_SPEED=150
                G91
                G1 E{r} F600
                G90
                BASE_RESUME VELOCITY=150
            {% endif %}
        {% else %}
            T0
            G1 X{idex_var.tool0_pause_position_x|default(0)} Y{idex_var.tool0_pause_position_y|default(0)} F7000
            {% if printer[printer.toolhead.extruder].temperature >= printer.configfile.settings.extruder.min_extrude_temp %}
                G91
                G1 E{e} F400
                G1 E-{r} F600
                G90
            {% endif %}
            CLEAN_NOZZLE
            M420 S1
            RESTORE_GCODE_STATE NAME=PAUSE MOVE=1 MOVE_SPEED=150
            G91
            G1 E{r} F600
            G90
            BASE_RESUME VELOCITY=150
        {% endif %}
    {% endif %}